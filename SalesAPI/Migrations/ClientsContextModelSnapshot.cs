// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesAPI.DbContextes;

#nullable disable

namespace SalesAPI.Migrations
{
    [DbContext(typeof(ClientsContext))]
    partial class ClientsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsConnected")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SignalRConnectionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "Alkaalife",
                            EmailAddress = "khaled@alkaalife.com",
                            IsConnected = false,
                            Name = "Khaled",
                            SignalRConnectionId = ""
                        },
                        new
                        {
                            Id = 2,
                            CompanyName = "Alkaalife",
                            EmailAddress = "ali@alkaalife.com",
                            IsConnected = false,
                            Name = "Ali",
                            SignalRConnectionId = ""
                        },
                        new
                        {
                            Id = 3,
                            CompanyName = "Aljazerr",
                            EmailAddress = "escandar@aljazerr.com",
                            IsConnected = false,
                            Name = "Escandar",
                            SignalRConnectionId = ""
                        },
                        new
                        {
                            Id = 4,
                            CompanyName = "Jubali",
                            EmailAddress = "zaki@jubali.com",
                            IsConnected = false,
                            Name = "Zaki",
                            SignalRConnectionId = ""
                        },
                        new
                        {
                            Id = 5,
                            CompanyName = "Jubali",
                            EmailAddress = "naif@jubali.com",
                            IsConnected = false,
                            Name = "Naif",
                            SignalRConnectionId = ""
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
